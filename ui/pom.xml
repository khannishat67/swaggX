<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven. apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.cosmos.api</groupId>
		<artifactId>swagger-studio</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>ui</artifactId>
	<version>${global.version}</version>
	<name>Swagger Studio Reference UI Component</name>
	<packaging>pom</packaging>
	<properties>
		<java.version>1.8</java.version>
	</properties>
	<profiles>
		<profile>
			<id>production</id>
			<activation>
				<!-- this profile is active by default -->
				<activeByDefault>true</activeByDefault>
				<!-- activate if system properties 'env=dev' -->
				<property>
					<name>env</name>
					<value>production</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<configuration>
							<environmentVariables>
								<REACT_APP_ROUTER_BASE>/spectrum</REACT_APP_ROUTER_BASE>
							</environmentVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<build>
		<!-- copy and filter configuration file with environment specific token 
			replacements -->
		<resources>
			<resource>
				<directory>public/html</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<!-- resource plugin for copying and filtering resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>filter</id>
						<phase>process-sources</phase>
						<goals>
							<goal>resources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>webjar</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<tarLongFileMode>posix</tarLongFileMode>
							<descriptors>
								<descriptor>assembly/webjar-assembly.xml</descriptor>
							</descriptors>
							<finalName>${project.artifactId}-${project.version}</finalName>
						</configuration>
					</execution>
					<execution>
						<id>tgz</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<tarLongFileMode>posix</tarLongFileMode>
							<descriptors>
								<descriptor>assembly/tgz-assembly.xml</descriptor>
							</descriptors>
							<appendAssemblyId>false</appendAssemblyId>
							<finalName>${project.artifactId}-${project.version}</finalName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<execution>
						<id>npm-clean</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>clean</phase>
						<configuration>
							<executable>${npmPath}</executable>
							<workingDirectory>.</workingDirectory>
							<arguments>
								<argument>run</argument>
								<argument>clean</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>npm-install</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>pre-clean</phase>
						<configuration>
							<executable>${npmPath}</executable>
							<workingDirectory>.</workingDirectory>
							<arguments>
								<argument>install</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>npm-install-generate-sources</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<executable>${npmPath}</executable>
							<workingDirectory>.</workingDirectory>
							<arguments>
								<argument>run</argument>
								<argument>build</argument>
								<argument>--profile</argument>
								<argument>production</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>npm-pack</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>compile</phase>
						<configuration>
							<executable>${npmPath}</executable>
							<workingDirectory>.</workingDirectory>
							<arguments>
								<argument>pack</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
